from telegram.ext import Application, CommandHandler, MessageHandler, CallbackQueryHandler, filters
from .config import TELEGRAM_BOT_TOKEN
from .handlers.balance import show_balance
from .handlers.payments import show_payment_options, handle_payment_callback
from .handlers.auth import generate_code
from .handlers.help import show_help
from .handlers.links import show_links
from .handlers.subscriptions import show_subscriptions
from .handlers.subscriptions import activate_subscription  # –µ—Å–ª–∏ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è

from telegram import Update

async def start(update: Update, context):
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–¥–æ–≤ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.\n\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏."
    )

def main():
    if not TELEGRAM_BOT_TOKEN:
        print("TELEGRAM_BOT_TOKEN is not set!")
        return
    application = Application.builder().token(TELEGRAM_BOT_TOKEN).build()
    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.Regex("^üí∞ –ë–∞–ª–∞–Ω—Å$"), show_balance))
    application.add_handler(MessageHandler(filters.Regex("^üí≥ –ü–æ–ø–æ–ª–Ω–∏—Ç—å$"), show_payment_options))
    application.add_handler(MessageHandler(filters.Regex("^üîë –ü–æ–ª—É—á–∏—Ç—å –∫–æ–¥$"), generate_code))
    application.add_handler(MessageHandler(filters.Regex("^‚ùì –ü–æ–º–æ—â—å$"), show_help))
    application.add_handler(MessageHandler(filters.Regex("^üîó –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏$"), show_links))
    application.add_handler(MessageHandler(filters.Regex("^üéØ –ü–æ–¥–ø–∏—Å–∫–∏$"), show_subscriptions))
    application.add_handler(CallbackQueryHandler(handle_payment_callback, pattern="^pay_"))
    # –ü–æ–¥–ø–∏—Å–∫–∏ (–∞–∫—Ç–∏–≤–∞—Ü–∏—è)
    from .handlers.subscriptions import handle_subscription_callback
    application.add_handler(CallbackQueryHandler(handle_subscription_callback, pattern="^sub_"))
    application.run_polling(allowed_updates=Update.ALL_TYPES)

if __name__ == '__main__':
    main() 